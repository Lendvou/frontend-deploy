{"version":3,"sources":["../node_modules/peerjs/dist sync","store/core/index.ts","store/user/index.ts","store/rootReducer.ts","store/index.ts","routes/Hoc.tsx","utils/apiClient.ts","store/user/thunkActions.ts","layouts/Main.tsx","layouts/Auth.tsx","components/FieldWithValidation.tsx","utils/index.ts","pages/auth/Signup.tsx","pages/Admin/index.tsx","pages/Chat/Side.tsx","components/UploadFile.tsx","pages/Chat/Message.tsx","pages/Chat/Body.tsx","pages/Chat/index.tsx","pages/404.tsx","store/core/thunkActions.ts","pages/auth/Login.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","coreSlice","createSlice","name","initialState","peer","reducers","setPeer","state","payload","actions","token","isAuth","user","userSlice","setAuthData","resetAuthData","setUser","combineReducers","core","store","createLogger","collapsed","colors","title","prevState","action","nextState","error","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","useTypedSelector","useSelector","useTypedDispatch","useDispatch","RouteHoc","isProtected","allowedRoles","Layout","layout","rest","to","includes","role","socket","io","process","transports","path","apiClient","feathers","configure","socketio","auth","storageKey","logIn","values","dispatch","a","authenticate","email","password","strategy","accessToken","currentUser","patchUser","getState","userId","service","patch","response","Main","children","history","useHistory","useState","isDrawerVisible","setIsDrawerVisible","goToPage","page","push","onFileUpload","event","file","target","files","data","FormData","append","axios","method","url","headers","Authorization","avatarId","_id","console","logout","message","useEffect","localStorage","getItem","document","body","classList","add","remove","className","LeftOutlined","onClick","placement","closable","onClose","visible","width","style","picker","createElement","type","onchange","click","openFilePicker","src","avatar","icon","UserOutlined","size","firstName","lastName","MenuOutlined","AlertOutlined","setItem","LogoutOutlined","Auth","FieldWithValidation","meta","errorText","clsx","touched","isEmail","test","String","toLowerCase","getReceiver","getUnreadMessagesKey","validate","errors","trim","length","Signup","isFromAdmin","setRole","onSubmit","create","success","FORM_ERROR","render","handleSubmit","submitError","submitting","input","placeholder","Password","htmlType","loading","AdminPage","Side","chats","activeChat","setChats","onChatClick","hasMore","setHasMore","search","setSearch","filteredChats","useMemo","filter","chat","receiver","sort","b","Date","lastMessageDate","getTime","getUnreadMessages","fetchNewChats","field","find","query","undefined","newItems","concat","total","log","fetchChats","value","onChange","dataLength","next","loader","color","scrollableTarget","map","client","num","lastMessage","text","moment","format","UploadFile","isVisible","onOk","uploads","setUploads","photos","photo","uid","filename","mimetype","uploadFile","fileInfo","reader","FileReader","readAsDataURL","onload","image","Image","result","height","this","v","onSendPhoto","onCancel","okText","cancelText","centered","destroyOnClose","customRequest","listType","fileList","arg","PlusOutlined","marginTop","Message","alt","createdAt","isRead","CheckOutlined","Body","onCallUser","currentCall","isCallActive","inputRef","useRef","listRef","containerRef","isModalVisible","setIsModalVisible","messages","setMessages","inputVal","setInputVal","fetchNewMessages","chatId","$limit","$skip","$sort","$read","newMessages","reverse","sendMessage","authorRole","onListScroll","element","scrollTop","oldScrollHeight","scrollHeight","checkIfDividerIsNeeded","index","isSame","createPhotoMessage","photosIds","el","on","container","current","shouldScroll","clientHeight","receiveMessage","removeListener","info","focus","setTimeout","fetchChatMessages","ref","PhoneOutlined","close","onScroll","UploadOutlined","onPressEnter","SendOutlined","addAudioStream","audio","stream","srcObject","addEventListener","play","Chat","useLocation","audioRef","setActiveChat","setCurrentCall","setIsCallActive","callUser","navigator","mediaDevices","getUserMedia","otherId","operator","call","userAudioStream","onPeerCall","get","caller","Modal","confirm","answer","logg","off","querystring","parse","from","isOnline","isBusy","idleOperators","min","max","randomInteger","Math","round","random","randomIdleOperator","clientId","operatorId","newChat","connectToOperator","onChatCreated","onChatPatched","newChats","item","NotFound","initPeer","myPeer","Peer","host","port","Login","Routes","exact","component","Admin","App","isLoading","setIsLoading","reAuthenticate","checkIsAuth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.14a6e041.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 366;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport Peer from 'peerjs';\r\n\r\nexport interface ICoreState {\r\n  peer: Peer;\r\n}\r\n\r\nconst initialState: ICoreState = {\r\n  peer: {} as Peer,\r\n};\r\n\r\nconst coreSlice = createSlice({\r\n  name: 'core',\r\n  initialState,\r\n  reducers: {\r\n    setPeer: (state, { payload }: PayloadAction<ICoreState['peer']>) => {\r\n      state.peer = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setPeer } = coreSlice.actions;\r\n\r\nexport default coreSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { IUser } from 'types';\r\n\r\nexport interface IUserState {\r\n  token: string;\r\n  isAuth: boolean;\r\n  user: IUser;\r\n}\r\n\r\nconst initialState: IUserState = {\r\n  token: '',\r\n  isAuth: false,\r\n  user: {} as IUser,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setAuthData: (state, { payload }: PayloadAction<IUserState>) => {\r\n      return payload;\r\n    },\r\n    resetAuthData: () => {\r\n      return initialState;\r\n    },\r\n    setUser: (state, { payload }: PayloadAction<IUserState['user']>) => {\r\n      state.user = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAuthData, resetAuthData, setUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport core from 'store/core';\r\nimport user from 'store/user';\r\n\r\nexport default combineReducers({\r\n  core,\r\n  user,\r\n});\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport { RootState } from './types';\r\n\r\nconst logger = createLogger({\r\n  collapsed: true,\r\n  colors: {\r\n    title: () => '#6FB3D2',\r\n    prevState: () => '#9E9E9E',\r\n    action: () => '#03A9F4',\r\n    nextState: () => '#4CAF50',\r\n    error: () => '#F20404',\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => {\r\n    const serializableCheck = {\r\n      // Ignore these action types\r\n      ignoredActions: ['core/setPeer'],\r\n    };\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      return getDefaultMiddleware({ serializableCheck }).concat(logger);\r\n    }\r\n    return getDefaultMiddleware({ serializableCheck });\r\n  },\r\n});\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\nexport const useTypedDispatch: () => typeof store.dispatch = useDispatch;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Route, RouteProps } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useTypedSelector } from 'store';\r\n\r\ntype Props = {\r\n  isProtected?: boolean;\r\n  allowedRoles?: ('admin' | 'operator' | 'client')[];\r\n  layout?: React.FC<any>;\r\n} & RouteProps;\r\n\r\nconst RouteHoc: React.FC<Props> = ({\r\n  isProtected = false,\r\n  allowedRoles,\r\n  layout: Layout,\r\n  ...rest\r\n}) => {\r\n  const { user, isAuth } = useTypedSelector((state) => state.user);\r\n\r\n  if (isProtected && !isAuth) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  if (allowedRoles && !allowedRoles.includes(user.role!)) {\r\n    return <Redirect to=\"/404\" />;\r\n  }\r\n\r\n  if (!Layout) {\r\n    return <Route {...rest} />;\r\n  }\r\n  return (\r\n    <Layout>\r\n      <Route {...rest} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default RouteHoc;\r\n","import feathers from '@feathersjs/feathers';\r\nimport socketio from '@feathersjs/socketio-client';\r\nimport io from 'socket.io-client';\r\nimport auth from '@feathersjs/authentication-client';\r\n\r\nexport const host = process.env.REACT_APP_API_URL || 'http://localhost:3030';\r\n\r\nconst socket = io(host, {\r\n  // transports: ['polling', 'websocket'],\r\n  transports: ['polling'],\r\n  path: process.env.REACT_APP_SOCKET_URL || '/socket.io',\r\n});\r\n\r\nconst apiClient = feathers()\r\n  .configure(socketio(socket))\r\n  .configure(\r\n    auth({\r\n      storageKey: 'token',\r\n    })\r\n  );\r\n\r\nexport default apiClient;\r\n","import apiClient from 'utils/apiClient';\r\n\r\nimport { setAuthData, resetAuthData, setUser } from 'store/user';\r\n\r\nimport { PromiseThunk } from 'store/types';\r\nimport { IUser } from 'types';\r\n\r\nexport const checkIsUserAuth = (): PromiseThunk<IUser> => async (dispatch) => {\r\n  const { accessToken, user: currentUser } = await apiClient.reAuthenticate();\r\n\r\n  dispatch(\r\n    setAuthData({\r\n      isAuth: true,\r\n      token: accessToken,\r\n      user: currentUser,\r\n    })\r\n  );\r\n  return currentUser as IUser;\r\n};\r\n\r\nexport type LoginValues = {\r\n  email: string;\r\n  password: string;\r\n};\r\nexport const logIn =\r\n  (values: LoginValues): PromiseThunk =>\r\n  async (dispatch) => {\r\n    const { accessToken, user: currentUser } = await apiClient.authenticate({\r\n      email: values.email,\r\n      password: values.password,\r\n      strategy: 'local',\r\n    });\r\n\r\n    dispatch(\r\n      setAuthData({\r\n        isAuth: true,\r\n        token: accessToken,\r\n        user: currentUser,\r\n      })\r\n    );\r\n  };\r\n\r\nexport const logOut = (): PromiseThunk<any> => async (dispatch) => {\r\n  await apiClient.logout();\r\n  dispatch(resetAuthData());\r\n};\r\n\r\nexport const patchUser =\r\n  (values: Partial<IUser>): PromiseThunk<IUser> =>\r\n  async (dispatch, getState) => {\r\n    const userId = getState().user.user;\r\n\r\n    const response: IUser = await apiClient.service('users').patch(userId, values);\r\n    dispatch(setUser(response));\r\n\r\n    return response;\r\n  };\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  AlertOutlined,\r\n  LeftOutlined,\r\n  LogoutOutlined,\r\n  MenuOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport { Avatar, Drawer, message } from 'antd';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nimport { useTypedDispatch, useTypedSelector } from 'store';\r\nimport { logOut, patchUser } from 'store/user/thunkActions';\r\n\r\nconst Main: React.FC<any> = ({ children }) => {\r\n  const history = useHistory();\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const { user, token } = useTypedSelector((state) => state.user);\r\n\r\n  const [isDrawerVisible, setIsDrawerVisible] = useState<boolean>(false);\r\n\r\n  const goToPage = (page: string) => {\r\n    setIsDrawerVisible(false);\r\n    history.push(page);\r\n  };\r\n\r\n  const openFilePicker = () => {\r\n    const picker = document.createElement('input');\r\n    picker.type = 'file';\r\n    picker.onchange = onFileUpload;\r\n\r\n    picker.click();\r\n  };\r\n\r\n  const onFileUpload = async (event: any) => {\r\n    const file = event.target!.files![0];\r\n    const data = new FormData();\r\n    data.append('file', file);\r\n\r\n    try {\r\n      const response = (\r\n        await axios({\r\n          method: 'post',\r\n          url: process.env.REACT_APP_FILE_URL,\r\n          data,\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n      ).data[0];\r\n\r\n      await dispatch(patchUser({ avatarId: response._id }));\r\n    } catch (e) {\r\n      console.error('Error while uploading avatar', e);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await dispatch(logOut());\r\n      history.push('/login');\r\n    } catch (e) {\r\n      message.error('Не удалось разлогиниться', 4);\r\n      console.error('Error while unlogging', e);\r\n    }\r\n  };\r\n\r\n  const toggleColorMode = () => {\r\n    const isDarkMode = localStorage.getItem('darkMode');\r\n\r\n    if (isDarkMode === '1') {\r\n      document.body.classList.remove('dark');\r\n      localStorage.setItem('darkMode', '0');\r\n    } else {\r\n      document.body.classList.add('dark');\r\n      localStorage.setItem('darkMode', '1');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isDarkMode = localStorage.getItem('darkMode');\r\n    if (isDarkMode === '1') {\r\n      document.body.classList.add('dark');\r\n    } else {\r\n      document.body.classList.remove('dark');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <LeftOutlined className=\"main__settings-icon\" onClick={() => setIsDrawerVisible(true)} />\r\n\r\n      <Drawer\r\n        className=\"drawer\"\r\n        title=\"Настройки\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={() => setIsDrawerVisible(false)}\r\n        visible={isDrawerVisible}\r\n        width=\"15%\"\r\n      >\r\n        <div style={{ width: '100%' }}>\r\n          <div className=\"drawer__user-info\">\r\n            <div onClick={() => openFilePicker()}>\r\n              <Avatar\r\n                key={user.avatar?.path}\r\n                src={user.avatar?.path}\r\n                icon={<UserOutlined />}\r\n                size={128}\r\n              />\r\n            </div>\r\n            <div className=\"drawer__user-name\">\r\n              {user.firstName} {user.lastName}\r\n            </div>\r\n          </div>\r\n\r\n          {user.role === 'admin' ? (\r\n            <div className=\"drawer__list\">\r\n              <div onClick={() => goToPage('/chat')} className=\"drawer__list-item\">\r\n                <MenuOutlined />\r\n                Чат\r\n              </div>\r\n              <div onClick={() => goToPage('/admin')} className=\"drawer__list-item\">\r\n                <MenuOutlined />\r\n                Админ панель\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"drawer__bottom\">\r\n          <div className=\"drawer__color-mode\">\r\n            <AlertOutlined onClick={toggleColorMode} />\r\n          </div>\r\n\r\n          <div className=\"drawer__logout\">\r\n            Выйти\r\n            <LogoutOutlined className=\"drawer__logout\" onClick={logout} />\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Auth: React.FC<any> = ({ children }) => {\r\n  return (\r\n    <div className=\"auth-layout\">\r\n      <div className=\"auth-layout__container\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { FieldState } from 'final-form';\r\n\r\ntype Props = {\r\n  meta: Partial<FieldState<any>>;\r\n  errorText?: string;\r\n};\r\n\r\nconst FieldWithValidation: React.FC<Props> = ({\r\n  meta,\r\n  errorText,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={clsx('field-with-validation', {\r\n        'field-with-validation--invalid': meta.error && meta.touched,\r\n      })}\r\n    >\r\n      {errorText && meta.error && meta.touched && (\r\n        <span className=\"field-with-validation__error-text\">{errorText}</span>\r\n      )}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FieldWithValidation;\r\n","import { IChat, IUser } from 'types';\r\n\r\nexport const isEmail = (email: string) => {\r\n  const emailRegex =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // eslint-disable-line\r\n  return emailRegex.test(String(email).toLowerCase());\r\n};\r\n\r\nexport const getRandomInteger = (min: number, max: number) =>\r\n  Math.round(Math.random() * (max - min) + min);\r\n\r\nexport const getReceiver = (user: IUser): 'client' | 'operator' => {\r\n  return user.role === 'client' ? 'operator' : 'client';\r\n};\r\n\r\nexport const getUnreadMessages = (chat: IChat, user: IUser) =>\r\n  chat[(user.role + 'UnreadMessages') as 'clientUnreadMessages' | 'operatorUnreadMessages'];\r\nexport const getUnreadMessagesKey = (user: IUser) =>\r\n  (user.role + 'UnreadMessages') as 'clientUnreadMessages' | 'operatorUnreadMessages';\r\n","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { Button, Input, message } from 'antd';\r\nimport { FORM_ERROR } from 'final-form';\r\nimport clsx from 'clsx';\r\n\r\nimport FieldWithValidation from 'components/FieldWithValidation';\r\n\r\nimport { isEmail } from 'utils';\r\nimport apiClient from 'utils/apiClient';\r\n\r\nimport { ValidationErrorsObject } from 'types';\r\n\r\ntype Props = {\r\n  title?: string;\r\n  isFromAdmin?: boolean;\r\n};\r\n\r\nconst Signup: React.FC<Props> = ({\r\n  title = 'Регистрация',\r\n  isFromAdmin = false,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const [role, setRole] = useState<'client' | 'operator' | 'admin'>('client');\r\n\r\n  const onSubmit = async (values: {\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n  }) => {\r\n    const data = {\r\n      email: values.email,\r\n      password: values.password,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      role,\r\n    };\r\n\r\n    try {\r\n      await apiClient.service('users').create(data);\r\n      message.success('Пользователь успешно создан');\r\n      if (!isFromAdmin) {\r\n        history.push('/login');\r\n      }\r\n    } catch (e) {\r\n      console.error('signup err', e);\r\n      return { [FORM_ERROR]: e.message };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      validate={validate}\r\n      render={({ handleSubmit, submitError, submitting }) => (\r\n        <form className=\"auth-form auth-form--signup\" onSubmit={handleSubmit}>\r\n          <div className=\"auth-form__title\">{title}</div>\r\n\r\n          {submitError && <div className=\"auth-form__error\">{submitError}</div>}\r\n\r\n          {isFromAdmin && (\r\n            <div className=\"auth-form__role\">\r\n              <div\r\n                className={clsx('auth-form__role-item', {\r\n                  'auth-form__role-item--active': role === 'client',\r\n                })}\r\n                onClick={() => setRole('client')}\r\n              >\r\n                Клиент\r\n              </div>\r\n              <div\r\n                className={clsx('auth-form__role-item', {\r\n                  'auth-form__role-item--active': role === 'operator',\r\n                })}\r\n                onClick={() => setRole('operator')}\r\n              >\r\n                Оператор\r\n              </div>\r\n              <div\r\n                className={clsx('auth-form__role-item', {\r\n                  'auth-form__role-item--active': role === 'admin',\r\n                })}\r\n                onClick={() => setRole('admin')}\r\n              >\r\n                Админ\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"auth-form__fields\">\r\n            <Field name=\"firstName\">\r\n              {({ input, meta }) => (\r\n                <FieldWithValidation meta={meta} errorText={meta.error}>\r\n                  <Input {...input} placeholder=\"Имя\" />\r\n                </FieldWithValidation>\r\n              )}\r\n            </Field>\r\n            <Field name=\"lastName\">\r\n              {({ input, meta }) => (\r\n                <FieldWithValidation meta={meta} errorText={meta.error}>\r\n                  <Input {...input} placeholder=\"Фамилия\" />\r\n                </FieldWithValidation>\r\n              )}\r\n            </Field>\r\n            <Field name=\"email\">\r\n              {({ input, meta }) => (\r\n                <FieldWithValidation meta={meta} errorText={meta.error}>\r\n                  <Input {...input} placeholder=\"Email\" />\r\n                </FieldWithValidation>\r\n              )}\r\n            </Field>\r\n            <Field name=\"password\">\r\n              {({ input, meta }) => (\r\n                <FieldWithValidation meta={meta} errorText={meta.error}>\r\n                  <Input.Password {...input} placeholder=\"Пароль\" />\r\n                </FieldWithValidation>\r\n              )}\r\n            </Field>\r\n          </div>\r\n\r\n          <Button\r\n            className=\"auth-form__button\"\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            loading={submitting}\r\n          >\r\n            {isFromAdmin ? 'Добавить' : 'Зарегистрироваться'}\r\n          </Button>\r\n          {!isFromAdmin && (\r\n            <div className=\"auth-form__footer-text\">\r\n              Есть аккаунт? <Link to=\"/login\">Войти</Link>\r\n            </div>\r\n          )}\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\ntype FormState = {\r\n  email: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n};\r\n\r\nconst validate = (values: Partial<FormState>) => {\r\n  const errors: ValidationErrorsObject<FormState> = {};\r\n\r\n  if (!values.email) {\r\n    errors.email = 'Обязательное поле';\r\n  }\r\n  if (values.email && !isEmail(values.email)) {\r\n    errors.email = 'Введите email правильно';\r\n  }\r\n  if (!values.password || values.password.trim().length < 3) {\r\n    errors.password = 'Введите не менее 6 символов';\r\n  }\r\n  if (!values.firstName) {\r\n    errors.firstName = 'Обязательное поле';\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = 'Обязательное поле';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\n\r\nimport Signup from 'pages/auth/Signup';\r\n\r\nconst AdminPage = () => {\r\n  return (\r\n    <div className=\"admin\">\r\n      <h2 className=\"admin__title\">Wellcum to the admin page</h2>\r\n      <div className=\"admin__signup\">\r\n        <Signup title=\"Добавление пользователя\" isFromAdmin />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import { UserOutlined } from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ReactLoading from 'react-loading';\r\nimport { useTypedSelector } from 'store';\r\n\r\nimport { getReceiver } from 'utils';\r\nimport apiClient from 'utils/apiClient';\r\n\r\nimport { Paginated } from '@feathersjs/feathers';\r\nimport { IChat } from 'types';\r\n\r\ntype Props = {\r\n  chats: IChat[];\r\n  activeChat: Partial<IChat>;\r\n  setChats: React.Dispatch<React.SetStateAction<IChat[]>>;\r\n  onChatClick: (chat: IChat) => void;\r\n};\r\n\r\nconst Side: React.FC<Props> = ({ chats, activeChat, setChats, onChatClick }) => {\r\n  const user = useTypedSelector((state) => state.user.user);\r\n\r\n  const [hasMore, setHasMore] = useState<boolean>(true);\r\n  const [search, setSearch] = useState<string>('');\r\n\r\n  const filteredChats = useMemo(() => {\r\n    if (!search) return chats;\r\n\r\n    const filtered = chats.filter((chat) => {\r\n      const receiver = chat[getReceiver(user)];\r\n      return (\r\n        receiver?.firstName?.toLowerCase().includes(search.toLowerCase()) ||\r\n        receiver?.lastName?.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    });\r\n\r\n    return filtered.sort(\r\n      (a, b) => new Date(b.lastMessageDate).getTime() - new Date(a.lastMessageDate).getTime()\r\n    );\r\n  }, [search, chats, user]);\r\n\r\n  // const sortedChats = useMemo(() => {\r\n  //   console.log('');\r\n\r\n  //   return filteredChats.sort(\r\n  //     (a, b) => new Date(b.lastMessageDate).getTime() - new Date(a.lastMessageDate).getTime()\r\n  //   );\r\n  // }, [filteredChats]);\r\n\r\n  const getUnreadMessages = (chat: IChat) =>\r\n    chat[(user.role + 'UnreadMessages') as 'clientUnreadMessages' | 'operatorUnreadMessages'];\r\n\r\n  const fetchNewChats = async () => {\r\n    const field = user.role === 'client' ? 'clientId' : 'operatorId';\r\n\r\n    const response: Paginated<IChat> = await apiClient.service('chats').find({\r\n      query: {\r\n        [field]: user._id,\r\n        $limit: 15,\r\n        $skip: chats.length,\r\n        $search: search || undefined,\r\n        $sort: { lastMessageDate: -1 },\r\n      },\r\n    });\r\n\r\n    const newItems = chats.concat(response.data);\r\n    setChats(newItems);\r\n\r\n    if (newItems.length >= response.total) {\r\n      setHasMore(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchChats = async () => {\r\n      const field = user.role === 'client' ? 'clientId' : 'operatorId';\r\n\r\n      const response: Paginated<IChat> = await apiClient.service('chats').find({\r\n        query: {\r\n          [field]: user._id,\r\n          $limit: 15,\r\n          $skip: 0,\r\n          $sort: { lastMessageDate: -1 },\r\n        },\r\n      });\r\n\r\n      console.log('chats', response);\r\n      setChats(response.data);\r\n    };\r\n\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat__side\">\r\n      <div className=\"chat__side-search\">\r\n        <Avatar src={user.avatar?.path} icon={<UserOutlined />} />\r\n        <Input placeholder=\"Поиск\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n      </div>\r\n      <h2 className=\"chat__title\">Чаты</h2>\r\n      <div className=\"chat__side-items\" id=\"scrollableContainer\">\r\n        <InfiniteScroll\r\n          dataLength={chats.length}\r\n          next={fetchNewChats}\r\n          hasMore={hasMore}\r\n          loader={\r\n            chats.length === 0 ? (\r\n              <span />\r\n            ) : (\r\n              <ReactLoading type=\"bars\" color=\"#69C262\" width=\"40px\" className=\"loading-center\" />\r\n            )\r\n          }\r\n          scrollableTarget=\"scrollableContainer\"\r\n        >\r\n          {filteredChats.map((chat) => {\r\n            return (\r\n              <div\r\n                key={chat._id}\r\n                className={clsx('chat__box', {\r\n                  'chat__box--active': chat._id === activeChat._id,\r\n                })}\r\n                onClick={() => onChatClick(chat)}\r\n              >\r\n                <div className=\"chat__box__left\">\r\n                  <Avatar src={chat[getReceiver(user)]?.avatar?.path} icon={<UserOutlined />} />\r\n                </div>\r\n                <div className=\"chat__box__center\">\r\n                  <div className=\"chat__box__name\">\r\n                    {/* {chat[getReceiver(user)]?.firstName} {chat[getReceiver(user)]?.lastName} */}\r\n                    Клиент {chat.client?.num || '-'}\r\n                  </div>\r\n                  <div className=\"chat__box__last-message\">\r\n                    {chat.lastMessage?.userId === user._id && <span>Вы:</span>}\r\n                    {chat.lastMessage?.type === 'text' && chat.lastMessage?.text}\r\n                    {chat.lastMessage?.type === 'photo' && '📥 Photo'}\r\n                  </div>\r\n                </div>\r\n                <div className=\"chat__box__right\">\r\n                  <div className=\"chat__box__time\">\r\n                    {chat.lastMessageDate ? moment(chat.lastMessageDate).format('HH:mm') : ''}\r\n                  </div>\r\n                  {!!getUnreadMessages(chat) && (\r\n                    <div className=\"chat__box__messages-count\">{getUnreadMessages(chat)}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Side;\r\n","import React, { useMemo, useState } from 'react';\r\nimport { Modal, Upload } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nimport { RcCustomRequestOptions } from 'antd/lib/upload/interface';\r\nimport { IUpload } from 'types';\r\nimport { useTypedSelector } from 'store';\r\n\r\ntype Props = {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  onOk: (uploads: IUpload[]) => void;\r\n};\r\n\r\nconst UploadFile: React.FC<Props> = ({ isVisible, onClose, onOk }) => {\r\n  const token = useTypedSelector((state) => state.user.token);\r\n\r\n  const [uploads, setUploads] = useState<IUpload[]>([]);\r\n\r\n  const photos = useMemo(() => {\r\n    return uploads.map((photo) => ({\r\n      uid: photo._id,\r\n      name: photo.filename,\r\n      size: 50,\r\n      type: photo.mimetype as string,\r\n      url: photo.path,\r\n    }));\r\n  }, [uploads]);\r\n\r\n  const uploadFile = async (fileInfo: RcCustomRequestOptions) => {\r\n    console.log('args', fileInfo);\r\n\r\n    const file = fileInfo.file;\r\n    const data = new FormData();\r\n    data.append('file', file);\r\n\r\n    var reader = new FileReader();\r\n\r\n    //Read the contents of Image File.\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = function (e) {\r\n      //Initiate the JavaScript Image object.\r\n      var image = new Image();\r\n\r\n      //Set the Base64 string return from FileReader as source.\r\n      image.src = e.target!.result as string;\r\n\r\n      //Validate the File Height and Width.\r\n      image.onload = function () {\r\n        // @ts-ignore\r\n        var height = this.height;\r\n        // @ts-ignore\r\n        var width = this.width;\r\n        console.log('height withd', width, height);\r\n      };\r\n    };\r\n\r\n    try {\r\n      const response = (\r\n        await axios({\r\n          method: 'post',\r\n          url: process.env.REACT_APP_FILE_URL,\r\n          data,\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n      ).data[0];\r\n\r\n      setUploads((v) => [...v, response]);\r\n      console.log('resp', response);\r\n    } catch (e) {\r\n      console.error('error in uploading', e);\r\n    }\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    setUploads([]);\r\n    onClose();\r\n  };\r\n\r\n  const onSendPhoto = () => {\r\n    setUploads([]);\r\n    onOk(uploads);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={isVisible}\r\n      onCancel={onCloseModal}\r\n      onOk={() => onSendPhoto()}\r\n      okText=\"Отправить\"\r\n      cancelText=\"Отменить\"\r\n      centered\r\n      destroyOnClose\r\n    >\r\n      <Upload\r\n        customRequest={uploadFile}\r\n        listType=\"picture-card\"\r\n        fileList={photos}\r\n        onChange={(arg) => console.log('file', arg)}\r\n      >\r\n        {uploads.length >= 4 ? null : (\r\n          <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Загрузить</div>\r\n          </div>\r\n        )}\r\n      </Upload>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UploadFile;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\n\r\nimport { IMessage } from 'types';\r\nimport { useTypedSelector } from 'store';\r\n\r\ntype Props = {\r\n  message: IMessage;\r\n};\r\n\r\nconst Message: React.FC<Props> = ({ message }) => {\r\n  const user = useTypedSelector((state) => state.user.user);\r\n\r\n  return (\r\n    <div\r\n      className={clsx('chat-message', {\r\n        'chat-message--yours': message.userId === user._id,\r\n        'chat-message--his': message.userId !== user._id,\r\n      })}\r\n    >\r\n      <div className=\"chat-message__wrapper\">\r\n        {message.type === 'text' && <div className=\"chat-message__text\">{message.text}</div>}\r\n        {message.type === 'photo' && (\r\n          <div className=\"chat-message__photo\">\r\n            {message.photos.map((photo) => (\r\n              <img key={photo._id} src={photo.path} alt=\"tut doljno bit foto\" />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"chat-message__info\">\r\n          <div className=\"chat-message__time\">{moment(message.createdAt).format('HH:mm')}</div>\r\n          <div className=\"chat-message__received\">\r\n            {message.isRead ? (\r\n              <div className=\"chat-message__received-double\">\r\n                <CheckOutlined />\r\n                <CheckOutlined />\r\n              </div>\r\n            ) : (\r\n              <CheckOutlined />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Avatar, Divider, Input } from 'antd';\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport { PhoneOutlined, SendOutlined, UploadOutlined, UserOutlined } from '@ant-design/icons';\r\nimport Peer from 'peerjs';\r\n\r\nimport UploadFile from 'components/UploadFile';\r\nimport Message from './Message';\r\n\r\nimport apiClient from 'utils/apiClient';\r\nimport { getReceiver } from 'utils';\r\n\r\nimport { Paginated } from '@feathersjs/feathers';\r\nimport { IChat, IMessage, IUpload } from 'types';\r\nimport { useTypedSelector } from 'store';\r\n\r\ntype Props = {\r\n  activeChat: Partial<IChat>;\r\n  onCallUser: () => void;\r\n  isCallActive: boolean;\r\n  currentCall: Peer.MediaConnection | null;\r\n};\r\n\r\nconst Body: React.FC<Props> = ({ activeChat, onCallUser, isCallActive, currentCall }) => {\r\n  const inputRef = useRef<Input>(null);\r\n  const listRef = useRef<HTMLDivElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const user = useTypedSelector((state) => state.user.user);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\r\n  const [messages, setMessages] = useState<IMessage[]>([]);\r\n  const [inputVal, setInputVal] = useState<string>('');\r\n  const [hasMore, setHasMore] = useState<boolean>(false);\r\n\r\n  const fetchNewMessages = async () => {\r\n    const query = {\r\n      chatId: activeChat._id,\r\n      $limit: 20,\r\n      $skip: messages.length,\r\n      $sort: { createdAt: -1 },\r\n      $read: true,\r\n    };\r\n\r\n    const result: Paginated<IMessage> = await apiClient.service('messages').find({ query });\r\n\r\n    const newMessages = result.data.reverse().concat(messages);\r\n    setMessages(newMessages);\r\n\r\n    if (newMessages.length >= result.total) {\r\n      setHasMore(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!inputVal) return;\r\n\r\n    const data = {\r\n      text: inputVal,\r\n      authorRole: user.role,\r\n      chatId: activeChat._id,\r\n      userId: user._id,\r\n      type: 'text',\r\n    };\r\n\r\n    await apiClient.service('messages').create(data);\r\n    setInputVal('');\r\n  };\r\n\r\n  const onListScroll = async (e: React.UIEvent<HTMLDivElement>) => {\r\n    const element = e.target as HTMLDivElement;\r\n\r\n    if (hasMore && element.scrollTop === 0) {\r\n      const oldScrollHeight = element.scrollHeight;\r\n\r\n      await fetchNewMessages();\r\n      element.scrollTop = element.scrollHeight - oldScrollHeight;\r\n    }\r\n  };\r\n\r\n  const checkIfDividerIsNeeded = (message: IMessage, index: number): boolean => {\r\n    return (\r\n      !!messages[index + 1] &&\r\n      !moment(messages[index + 1].createdAt).isSame(moment(message.createdAt), 'day')\r\n    );\r\n  };\r\n\r\n  const createPhotoMessage = async (uploads: IUpload[]) => {\r\n    try {\r\n      await apiClient.service('messages').create({\r\n        type: 'photo',\r\n        photosIds: uploads.map((el) => el._id),\r\n        authorRole: user.role,\r\n        chatId: activeChat._id,\r\n        userId: user._id,\r\n      });\r\n      setIsModalVisible(false);\r\n    } catch (e) {\r\n      console.error('photo error', e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const receiveMessage = (message: IMessage) => {\r\n      const container = listRef.current;\r\n      const shouldScroll: boolean =\r\n        container!.scrollTop + container!.clientHeight === container!.scrollHeight;\r\n\r\n      const newMessages = messages.concat(message);\r\n      setMessages(newMessages);\r\n\r\n      if (user._id === message.userId || shouldScroll) {\r\n        container!.scrollTop = container!.scrollHeight;\r\n      }\r\n    };\r\n\r\n    apiClient.service('messages').on('created', (message: IMessage) => {\r\n      console.log('receive messsssssss', message);\r\n\r\n      if (activeChat._id) {\r\n        receiveMessage(message);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      apiClient.service('messages').removeListener('created');\r\n    };\r\n  }, [messages, activeChat]);\r\n\r\n  useEffect(() => {\r\n    if (activeChat?._id) {\r\n      const fetchChatMessages = async () => {\r\n        const query = {\r\n          chatId: activeChat._id,\r\n          $limit: 20,\r\n          $skip: 0,\r\n          $sort: { createdAt: -1 },\r\n          $read: true,\r\n        };\r\n        const result: Paginated<IMessage> = await apiClient.service('messages').find({ query });\r\n\r\n        console.info('messages', result);\r\n        const newMessages = result.data.reverse();\r\n        setMessages(newMessages);\r\n        setHasMore(true);\r\n\r\n        inputRef.current?.focus();\r\n        listRef.current!.scrollTop = listRef.current!.scrollHeight;\r\n\r\n        setTimeout(() => {\r\n          if (\r\n            listRef.current!.scrollTop + listRef.current!.clientHeight !==\r\n            listRef.current!.scrollHeight\r\n          ) {\r\n            listRef.current!.scrollTop = listRef.current!.scrollHeight;\r\n          }\r\n        }, 100);\r\n      };\r\n\r\n      fetchChatMessages();\r\n    }\r\n  }, [activeChat]);\r\n\r\n  return (\r\n    <div className=\"chat__body\" ref={containerRef} id=\"chatick\">\r\n      {activeChat?._id ? (\r\n        <div className=\"chat__main\">\r\n          <div className=\"chat__navbar\">\r\n            <div className=\"chat__navbar__left\">\r\n              <Avatar\r\n                src={activeChat[getReceiver(user)]?.avatar?.path}\r\n                className=\"chat__navbar__avatar\"\r\n                icon={<UserOutlined />}\r\n              />\r\n              <div className=\"chat__navbar__name\">\r\n                {/* {activeChat[getReceiver(user)]?.firstName} {activeChat[getReceiver(user)]?.lastName} */}\r\n                Клиент {activeChat.client?.num || '-'}\r\n              </div>\r\n            </div>\r\n\r\n            <PhoneOutlined\r\n              className={clsx('chat__navbar__phone', {\r\n                'chat__navbar__phone--close': !!currentCall,\r\n              })}\r\n              id=\"phone-button\"\r\n              onClick={currentCall ? () => currentCall.close() : onCallUser}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"chat__list\" ref={listRef} id=\"scrollableList\" onScroll={onListScroll}>\r\n            {messages.map((message, index) => (\r\n              <div key={message._id}>\r\n                <Message message={message} />\r\n\r\n                {checkIfDividerIsNeeded(message, index) && (\r\n                  <Divider>{moment(messages[index + 1].createdAt).format('DD.MM.YYYY')}</Divider>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"chat__inputs\">\r\n            <UploadOutlined\r\n              className=\"chat__input-upload\"\r\n              onClick={() => setIsModalVisible(true)}\r\n            />\r\n            <Input\r\n              ref={inputRef}\r\n              className=\"chat__input-field\"\r\n              value={inputVal}\r\n              onChange={(e) => setInputVal(e.target.value)}\r\n              onPressEnter={() => sendMessage()}\r\n            />\r\n            <SendOutlined className=\"chat__input-send\" onClick={() => sendMessage()} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"chat__select-chat\">\r\n          <div className=\"chat__select-chat-text\">Выберите чат</div>\r\n        </div>\r\n      )}\r\n\r\n      <UploadFile\r\n        isVisible={isModalVisible}\r\n        onClose={() => setIsModalVisible(false)}\r\n        onOk={createPhotoMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport querystring from 'query-string';\r\nimport Peer from 'peerjs';\r\nimport { Modal } from 'antd';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport Side from './Side';\r\nimport Body from './Body';\r\n\r\nimport apiClient from 'utils/apiClient';\r\nimport { getRandomInteger, getUnreadMessages, getUnreadMessagesKey } from 'utils';\r\n\r\nimport { Paginated } from '@feathersjs/feathers';\r\nimport { IChat, IUser } from 'types';\r\nimport { useTypedSelector } from 'store';\r\n\r\nconst Chat = () => {\r\n  const { search } = useLocation();\r\n\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  const user = useTypedSelector((state) => state.user.user);\r\n  const peer = useTypedSelector((state) => state.core.peer);\r\n\r\n  const [chats, setChats] = useState<IChat[]>([]);\r\n  const [activeChat, setActiveChat] = useState<Partial<IChat>>({});\r\n  const [currentCall, setCurrentCall] = useState<Peer.MediaConnection | null>(null);\r\n  const [isCallActive, setIsCallActive] = useState<boolean>(false);\r\n\r\n  const chatClicked = (chat: IChat) => {\r\n    const newChats = chats.map((item) => {\r\n      if (item._id === chat._id) {\r\n        return {\r\n          ...chat,\r\n          [getUnreadMessagesKey(user)]: 0,\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    setChats(newChats);\r\n    setActiveChat(chat);\r\n  };\r\n\r\n  const callUser = async () => {\r\n    if (!activeChat?._id) return;\r\n\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n    });\r\n\r\n    const otherId = ['operator', 'admin'].includes(user.role)\r\n      ? activeChat.client!._id\r\n      : activeChat.operator!._id;\r\n    const call = peer.call(otherId, stream);\r\n\r\n    call.on('stream', (userAudioStream) => {\r\n      const audioEl = audioRef.current;\r\n      addAudioStream(audioEl!, userAudioStream);\r\n      setCurrentCall(call);\r\n    });\r\n\r\n    call.on('close', () => {\r\n      console.log('caller onclose');\r\n      setCurrentCall(null);\r\n      setIsCallActive(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onPeerCall = async (call: Peer.MediaConnection) => {\r\n      const caller = await apiClient.service('users').get(call.peer);\r\n      console.log('call', call, caller, call.peer);\r\n      // const caller = await apiClient.service('users').get(call.peer);\r\n\r\n      Modal.confirm({\r\n        title: `Клиент ${caller.num} вам звонит, ответить?`,\r\n        centered: true,\r\n        okText: 'Да',\r\n        cancelText: 'Нет',\r\n        onOk: async () => {\r\n          const stream = await navigator.mediaDevices.getUserMedia({\r\n            audio: true,\r\n          });\r\n\r\n          call.answer(stream);\r\n          setIsCallActive(true);\r\n          setCurrentCall(call);\r\n\r\n          call.on('stream', (userAudioStream) => {\r\n            const audioEl = audioRef.current;\r\n            addAudioStream(audioEl!, userAudioStream);\r\n          });\r\n          call.on('close', () => {\r\n            console.info('callee onclose');\r\n            setCurrentCall(null);\r\n            setIsCallActive(false);\r\n          });\r\n        },\r\n        onCancel: () => {\r\n          call.close();\r\n        },\r\n      });\r\n    };\r\n\r\n    peer.on('call', onPeerCall);\r\n\r\n    const logg = () => {\r\n      console.log('zaclousil');\r\n    };\r\n\r\n    peer.on('close', logg);\r\n\r\n    return () => {\r\n      peer.off('call', onPeerCall);\r\n      peer.off('close', logg);\r\n    };\r\n  }, [peer, activeChat, currentCall]);\r\n\r\n  useEffect(() => {\r\n    const parsedQuery = querystring.parse(search);\r\n    if (parsedQuery.from === 'client' && user.role === 'client') {\r\n      const connectToOperator = async () => {\r\n        const { data: idleOperators }: Paginated<IUser> = await apiClient.service('users').find({\r\n          query: {\r\n            role: 'operator',\r\n            isOnline: true,\r\n            isBusy: false,\r\n          },\r\n        });\r\n        if (idleOperators.length === 0) return;\r\n\r\n        const randomInteger = getRandomInteger(0, idleOperators.length - 1);\r\n        const randomIdleOperator = idleOperators[randomInteger];\r\n        // debugger;\r\n        console.log('conect', idleOperators, randomIdleOperator, user);\r\n\r\n        try {\r\n          const newChat: IChat = await apiClient.service('chats').create({\r\n            clientId: user._id,\r\n            operatorId: randomIdleOperator._id,\r\n          });\r\n          setActiveChat(newChat);\r\n        } catch (e) {\r\n          console.error('Error while creating chat', e);\r\n        }\r\n      };\r\n\r\n      connectToOperator();\r\n    }\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    const onChatCreated = (chat: IChat) => {\r\n      console.log('created chat', chat);\r\n      setChats((v) => [chat, ...v]);\r\n    };\r\n    const onChatPatched = (chat: IChat) => {\r\n      console.log('patched chat', chat);\r\n      const newChats = chats.map((item) => {\r\n        if (item._id === chat._id) {\r\n          return {\r\n            ...chat,\r\n            [getUnreadMessagesKey(user)]:\r\n              activeChat._id === chat._id ? 0 : getUnreadMessages(chat, user),\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n      setChats(newChats);\r\n    };\r\n\r\n    apiClient.service('chats').on('created', onChatCreated);\r\n    apiClient.service('chats').on('patched', onChatPatched);\r\n    return () => {\r\n      apiClient.service('chats').removeListener('created', onChatCreated);\r\n      apiClient.service('chats').removeListener('patched', onChatPatched);\r\n    };\r\n    // TODO CHECK\r\n  }, [chats, activeChat._id, user]);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <audio ref={audioRef} />\r\n\r\n      <Side chats={chats} activeChat={activeChat} setChats={setChats} onChatClick={chatClicked} />\r\n      <Body\r\n        activeChat={activeChat}\r\n        onCallUser={callUser}\r\n        isCallActive={isCallActive}\r\n        currentCall={currentCall}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction addAudioStream(audio: HTMLAudioElement, stream: MediaStream) {\r\n  audio.srcObject = stream;\r\n  audio.addEventListener('loadedmetadata', () => {\r\n    audio.play();\r\n  });\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"notfound\">\r\n      <h2>404</h2>\r\n      <p>страницы не существует</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import Peer from 'peerjs';\r\nimport { AppThunk } from 'store/types';\r\nimport { setPeer } from 'store/core';\r\n\r\nexport const initPeer = (): AppThunk => async (dispatch, getState) => {\r\n  const user = getState().user.user;\r\n\r\n  if (!user || !user._id) return;\r\n\r\n  const myPeer = new Peer(user._id, {\r\n    host: process.env.REACT_APP_IP || 'localhost',\r\n    port: 80,\r\n    path: process.env.REACT_APP_PEERJS_PATH || '/peerjs',\r\n  });\r\n\r\n  dispatch(setPeer(myPeer));\r\n  return myPeer;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, Input } from 'antd';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { FORM_ERROR } from 'final-form';\r\n\r\nimport FieldWithValidation from 'components/FieldWithValidation';\r\n\r\nimport { isEmail } from 'utils';\r\n\r\nimport { ValidationErrorsObject } from 'types';\r\nimport { useTypedDispatch, useTypedSelector } from 'store';\r\nimport { logIn, LoginValues } from 'store/user/thunkActions';\r\nimport { initPeer } from 'store/core/thunkActions';\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const { isAuth } = useTypedSelector((state) => state.user);\r\n\r\n  const onSubmit = async (values: LoginValues) => {\r\n    try {\r\n      await dispatch(logIn({ email: values.email, password: values.password }));\r\n      dispatch(initPeer());\r\n\r\n      history.push('/chat');\r\n    } catch (e) {\r\n      return { [FORM_ERROR]: e.message };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      history.push('/');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        validate={validate}\r\n        render={({ handleSubmit, submitError, submitting }) => (\r\n          <form className=\"auth-form auth-form--login\" onSubmit={handleSubmit}>\r\n            <div className=\"auth-form__title\">Вход</div>\r\n\r\n            {submitError && <div className=\"auth-form__error\">{submitError}</div>}\r\n\r\n            <div className=\"auth-form__fields\">\r\n              <Field name=\"email\">\r\n                {({ input, meta }) => (\r\n                  <FieldWithValidation meta={meta} errorText={meta.error}>\r\n                    <Input {...input} placeholder=\"Email\" />\r\n                  </FieldWithValidation>\r\n                )}\r\n              </Field>\r\n              <Field name=\"password\">\r\n                {({ input, meta }) => (\r\n                  <FieldWithValidation meta={meta} errorText={meta.error}>\r\n                    <Input.Password {...input} placeholder=\"Пароль\" />\r\n                  </FieldWithValidation>\r\n                )}\r\n              </Field>\r\n            </div>\r\n\r\n            {/* <Link to=\"/forgot-password\" className=\"auth-form__forgot\">\r\n                  Забыли пароль?\r\n                </Link> */}\r\n            <Button\r\n              className=\"auth-form__button\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              loading={submitting}\r\n            >\r\n              Войти\r\n            </Button>\r\n            <div className=\"auth-form__footer-text\">\r\n              Все ещё нет аккаунта? <Link to=\"/signup\">Зарегистрироваться</Link>\r\n            </div>\r\n          </form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\ntype FormState = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nconst validate = (values: Partial<FormState>) => {\r\n  const errors: ValidationErrorsObject<FormState> = {};\r\n\r\n  if (!values.email) {\r\n    errors.email = 'Обязательное поле';\r\n  }\r\n  if (values.email && !isEmail(values.email)) {\r\n    errors.email = 'Введите email правильно';\r\n  }\r\n  if (!values.password || values.password.trim().length <= 6) {\r\n    errors.password = 'Введите не менее 6 символов';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport RouteHoc from './Hoc';\r\n\r\nimport Main from 'layouts/Main';\r\nimport Auth from 'layouts/Auth';\r\nimport Admin from 'pages/Admin';\r\nimport Chat from 'pages/Chat';\r\nimport NotFound from 'pages/404';\r\nimport Login from 'pages/auth/Login';\r\nimport Signup from 'pages/auth/Signup';\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Redirect exact path=\"/\" to=\"/chat\" />\r\n      {/* role enum: ['admin', 'operator', 'client'] */}\r\n      <RouteHoc exact path=\"/404\" component={NotFound} />\r\n      <RouteHoc exact path=\"/login\" component={Login} layout={Auth} />\r\n      <RouteHoc exact path=\"/signup\" component={Signup} layout={Auth} />\r\n      <RouteHoc exact path=\"/chat\" component={Chat} layout={Main} isProtected />\r\n      <RouteHoc\r\n        exact\r\n        path=\"/admin\"\r\n        component={Admin}\r\n        layout={Main}\r\n        isProtected\r\n        allowedRoles={['admin']}\r\n      />\r\n      <Redirect to=\"/404\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { useEffect, useState } from 'react';\nimport ReactLoading from 'react-loading';\n\nimport Routes from 'routes';\n\nimport store from 'store';\nimport { checkIsUserAuth } from 'store/user/thunkActions';\n\nimport 'antd/dist/antd.css';\nimport 'assets/styles/index.scss';\nimport { Provider } from 'react-redux';\nimport { initPeer } from 'store/core/thunkActions';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    const checkIsAuth = async () => {\n      try {\n        await store.dispatch(checkIsUserAuth());\n        store.dispatch(initPeer());\n      } catch (e) {\n        console.error('WHAT THE HELL YOU ARE NOT AUTHENTICATed', e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkIsAuth();\n  }, []);\n\n  return isLoading ? (\n    <div className=\"page-loading\">\n      <ReactLoading type=\"bars\" color=\"#69C262\" />\n    </div>\n  ) : (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  // <React.StrictMode>\n  // \t<App />\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}